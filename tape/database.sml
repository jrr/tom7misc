
structure Database =
struct

  (* Get some official bitstrings *)
  val official = []

  (* Unofficial strings that did scan *)
  val scanned = map Marker.marker
    [("** **  *",
      "* * * **"),
     ("*** * **",
      "* *   **"),
     ("**** * *",
      "*  *  **"),
     ("***  * *",
      "* **  **"),
     ("*** *  *",
      "* **  **"),
     ("* * * **",
      "**  ** *"),
     ("*** * **",
      "* * *  *"),
     (* From first page *)
     ("**  *  *",
      "* ** ***"),
     ("** **  *",
      "* **  **"),
     ("***   **",
      "* ***  *"),
     ("** ** **",
      "***    *"),
     ("**    **",
      "**  ****"),
     ("***** **",
      "*  *   *"),
     ("**** ***",
      "* ******"),
     ("* *  * *",
      "*  *****"),
     ("* **   *",
      "* * ****"),
     ("** **  *",
      "* ** * *"),
     ("****   *",
      "*  ** **"),
     ("* **** *",
      "*** * **"),
     ("* * * **",
      "* * ** *"),
     ("*** ****",
      "*    * *"),
     ("** *** *",
      "*  *  **"),
     ("** *** *",
      "*   * **"),
     ("*  * * *",
      "*** * **"),
     ("** *   *",
      "* ** ***"),
     ("* *  ***",
      "**   ***"),
     ("*  *****",
      "***    *"),
     ("*     **",
      "****** *")
     ]

  (* These didn't scan, suggesting they are invalid --
     but it could also just be dirt, etc. *)
  val unscanned = map Marker.marker
     [("** **  *",
       "* * ****"),
      ("***   **",
       "*  *****"),
      ("** *  **",
       "*  **  *"),
      ("** *** *",
       "**** * *"),
      ("*   * **",
       "*** *  *"),

      (* these are from the second round;
         they were generated to have even parity *)
      ("**** * *",
       "*** * **"),
      ("*  *  **",
       "* *   **"),
      ("* *  * *",
       "***    *"),
      ("* *    *",
       "*  * ***"),
      ("*  *  **",
       "*      *"),
      ("*   * **",
       "*  * * *"),
      ("*     **",
       "*** *  *"),
      ("***** **",
       "**** ***"),
      ("*    ***",
       "* * *  *"),
      ("**     *",
       "*    * *"),
      ("****   *",
       "*   *  *"),
      ("**  * **",
       "**     *"),
      ("**    **",
       "***    *"),
      ("** * ***",
       "** ** **"),
      ("****** *",
       "* **  **"),
      ("** ** **",
       "********"),
      ("***   **",
       "***** **"),
      ("*      *",
       "* * ****"),
      ("* *** **",
       "**  ****"),
      ("****** *",
       "*** ****"),
      ("****** *",
       "* * * **"),
      ("*  *  **",
       "*   ** *"),
      ("*   ** *",
       "*  * * *"),
      ("**  *  *",
       "* ** ***")
      ]

end