Binary structure of a compiled POOP program              revision 2
                                                       24 June
24 June - Removed "number of arguments" thing

 - Header -

[*OBJ*]           Identifier "*OBJ*"
[BYTE]            Object Type
 0                Global Script (to show an introduction, maybe)
 1                Overworld Object
 2                Beast
 3                Item           |  Maybe combine these
 4                Weapon         |
 5                Special Attack |
[PORTAL\00\00]    Zero-filled 8-character filename

[WORD] Number of defined (or available) methods, actually including the
       undefined ones.
[WORD * num_methods]  Array of word-length pointers to the names of
the respective methods (strings)

(Method 1)
[\00\3A] Entry point                =Word Address=
(Method 2)
[\00\42] Entry point
(Method 3) - (say, for instance, that this one is undefined)
[\03\00] Entry point for all null methods (address may change)
(Method 4) - (this one is undefined too)
[\03\00] Same...
et cetera.

[WORD * num_methods]

-- Program Data --

.... all the code for the methods. See BINARY.TXT.

-- String --

String data used in the programs. Null-terminated.

All of the names of the methods:

[BORN\00]     These are zero-terminated strings (all caps) which are the
[TOUCH\00]    names of the methods. Referenced in the array above.
[ACTIVATE\00]
[ALIGNED\00]
et cetera.

When allocating this, you should leave space for all of the registers
(A, B, C, D, R, OUTARG1...OUTARG10, INARG1...INARG10) (32-bit each!)
which is 25 * 4 = 100 bytes. You also need an Instruction Pointer and other
things in the structure... we'll figure this out later.


