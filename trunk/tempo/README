This is a simple custom household temperature probe ensemble.
Probably not that useful for others, but code is GPL (see COPYING).


Local database server notes:

Set router to only DHCP in 10.0.0.2 - 10.0.0.200.
Set desktop computer to static IP e.g. 10.0.0.202 (check with ipconfig).
(Note that this IP is hard-coded in some stuff, e.g. wifi-check.sh!)
(In Windows 10, do this from "change adapter options", properties,
 then Internet Protocol Version 4 Properties.)

The windows mysql installer is 32 bit but can install 64 bit.
Server-only installation still comes with command-line client, so this
is all you need.

Set up windows MySQL on port 3306, not open to internet
(this seems to be the default without manual intervention).

create database tempo;
create user tempo@'10.0.0.%' identified by 'PASSWORD';
grant insert on tempo.* to 'tempo'@'10.0.0.%';
grant update on tempo.* to 'tempo'@'10.0.0.%';
grant select on tempo.* to 'tempo'@'10.0.0.%';
grant delete on tempo.* to 'tempo'@'10.0.0.%';

(also create the tables described in database.txt)

You can change the storage location (etc.) in
c:\programdata\mysql\mysql server 8.0\my.ini
(Move the Data directory itself to the new location too!)
Since it writes regularly, HDD may be better than SDD?


On the pi:

Write latest raspbian lite to microsd card.
On the boot partition:

Add onewire support in /boot/config.txt:
dtoverlay=w1-gpio,gpiopin=17

Turn on console too for debugging:
(probably not actually necessary)
enable_uart=1

Add a file just called 'ssh' to enable ssh on the next boot.

Need to configure wifi, by creating a file in /boot called
wpa_supplicant.conf:
country=US
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
  ssid="famicom"
  psk="PASSWORD-HERE"
}

Boot. Check the router to find what IP address is assigned by DHCP (or
scan, I guess). Raspberry pi starts with user "pi" and password
"raspberry". Change it!

sudo raspi-config
 - Set locale to en_US.UTF-8
 - Enable ssh (under "interfacing options")
 - Advanced: Expand filesystem
 - Boot options: Wait for network (?I think this is a good idea?)
(reboot?)

sudo dpkg-reconfigure tzdata
(to US Eastern or whatever you like)

sudo apt update
sudo apt full-upgrade
sudo apt autoremove
sudo apt autoclean

# these don't work any more?
# sudo apt-get install default-libmysqlclient-dev libmysql++-dev
# sudo apt-get install default-libmariaclient-dev libmaria++-dev

sudo apt install subversion emacs-nox libmariadb-dev-compat mariadb-client dos2unix i2c-tools apt-config-auto-update

(auto-update I think just runs "apt update", but you still need to manually up*grade*)

You should be able to connect using the command line client:
mysql -u tempo -p -h 10.0.0.202


svn co --username tom7 https://svn.code.sf.net/p/tom7misc/svn/trunk tom7misc
(just cc-lib and tempo should be needed, but might as well back up all source
code on every microsd card!)

Create the file database-config.txt, filling in the parentheticals:
server 10.0.0.202
user tempo
password (PASSWORD)
location (fill in a unique location where this device is going)

Wifi troubleshooting:
  Looks like if the pi boots before the wireless router, it may come
  up without internet and stay that way. 
  (There is "wait for internet" boot option in raspi-config which may
   address this.)
  The crontab command below also keeps trying to reconnect if pings
  to 10.0.0.202 fail.

Note that mysql support now seems to come via the "maria db"
non-Oracle fork of MySQL.


mysql++ is separate project from both mysql and maria, so it does not
have a "maria version". In 2020 I couldn't find the ubuntu package to
install, so I installed from source...

# as root
cd /usr/src
wget https://tangentsoft.com/mysqlpp/releases/mysql++-3.2.5.tar.gz
tar -zxvf mysql++-3.2.5.tar.gz
cd mysql++-3.2.5
./configure --prefix=/usr
make -j 2
sudo make install

# To auto-reconnect wifi, in /etc/crontab:
* * * * *  root  /home/pi/tom7misc/tempo/wifi-check.sh

To make tempo start up when the pi boots, which is probably a good
idea, add to the bottom of /etc/rc.local (before exit 0, obviously):

# Start tempo automatically.
/home/pi/tom7misc/tempo/onstart.sh &

And in .bashrc, a better prompt showing the IP address:
IP=$(ip addr show wlan0 | grep 'inet ' | sed 's/.*inet \([0-9.]*\).*/\1/g')
PS1='\[\033[01;32m\]\u@${IP}\[\033[00m\]:\[\033[01;34m\]\w \$\[\033[00m\] '


To create the SVG diagram in Illustrator:
 - Layer names yield <g id="abc"> with the SVG export option enabled. Use a-z.
   CSS selectors like #abc path { fill: #F00 !important } are used to set the
   path colors from temp readings.
 - If you get <tspan> elements in text this will interfere with substitution.
   I switched to SansSerif font (from Myriad Pro) and set kerning to 0 instead
   of Auto in Character panel, which seemed to help.
   
LED off:

echo none | sudo tee /sys/class/leds/led0/trigger
echo 1 | sudo tee /sys/class/leds/led0/brightness

To try:
/usr/bin/tvservice -o
apparently turns off HDMI and saves 30mA


Wiring AM2315 humidity/temperature sensor:

  - i2c needs pullups for clock and data. 2k is a common choice.
  - note both SDA and SCL on pi apparently have built-in 1.8k pullups to
    3v3, so maybe the resistors were not necessary. But I did it with
    2k resistors for my first one, which worked.
  - pins are in the top-left corner,
      1=red=power
      3=yellow=sda (pull-up to red)
      5=white=scl  (pull-up to red)
      7 skip
      9=black=gnd

