
# ########################
# Part I. Introduction
# ########################

# I used up all the pins on the pi reverse emulating
# the PPU. The EEPROM is basically using the CPU the
# normal way. What if we reverse emulated it too?
slide
  images/reverse-cpu.png
slide
  images/reverse-cpu-normal.png

# We could feed it instructions directly, which could
# simplify/eliminate the knocking. But it would also make
# it possible to have it execute supernaturally fast.
# Most programs have to read and write from variables
# (i.e. memory locations), but it's faster to operate
# on constants. We could make the CPU only operate on
# constants by streaming it such instructions (of course
# the constants are dynamically generated by ppuppy).
# With this, we could probably manage high-resolution
# sound. Or maybe change the palette every scanline.
# Or mine bitcoins.
slide
  dur 24
  array 1 4 images/reverse-cpu-streaming%.png


# ##############################
# Part V. Big Ideas
# ##############################


# Big ideas.

slide
  images/big-ideas.png

# So this is a good way to revisit hardware for which
# we have nostalgia. Like NES. Maybe the TI-82 calculator.

slide
  images/nostalgic-hardware.png

# I think about AI sometimes. It seems clear to me that
# it's at least logically possible, if not inevitable.
# And I worry about that, not just because it could destroy
# us, but just like, the feeling of being left behind?
# # Computers can already make chess moves that we can't
# # really understand.
# I have understandable nostalgia for the human brain.

# So one thing we could do is upload our mind into the
# cloud or whatever. This is the equivalent of "emulation."
# But maybe that's scary and we want to keep the hardware.
# Also it raises many ethical issues, like now you gotta
# keep N+1 redundancy and use ECC memory.

# So another approach would be to reverse-emulate the
# brain. For example, maybe you could replace your "memory"
# with advanced hardware that works much much faster
# than brains. Of course reverse emulating the NES tells
# nothing about how to do that. But it tells me a little
# about what it might feel like. What if I didn't want it
# to be so intrusive? For example, how might
# I interact with such a thing?

# Let's say I wanted to know something, like as a boring
# example, the prime factors of 
#    455276324879769941?

# 472866029 x 962801929 = 455276324879769941

# So could I maybe interface with such a thing? Like maybe
# would just feel like recalling a vey familiar fact? 
# For example I could recite to myself the ABCs. What if
# the alphabet was, to you, instead of a boring static fact,
# a dynamic fact that reorganized itself to suit the context?


# A B C D E F G  4 7 2 8 6 6 0 2 9...

slide
  images/prime-factors.png
slide
  images/abcd.png
slide
  images/abcd-factor.png

# XXX This joke is weak, even if you know metroid
slide
  dur 48
  images/police1.png
  dur 8
  images/police2.png
  dur 4
  images/police1.png
  dur 16
  images/police3.png
  dur 16
  images/police2.png

slide
  # XXX animate
  # XXX add metroid in background?
  images/motherbrain.png

#  [ ] big ideas
#  emulating the brain vs reverse-emulating the brain
#  neural implant = persistence of vision (aka bus capacitance)
#    vs. "replacing my software/roms with something faster"
#  [x] mother brain neural implant
#   [ ] this behavior is required by law!
#     [ ] galactic federal law [-:
#  [ ] ABCs
#  [ ] thanks / @tom7
