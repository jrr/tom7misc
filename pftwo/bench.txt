22:24

1344s

192340  0.065775s       FIND_NODE_TO_EXTEND
14060639353     4808.374588s    EXTEND_NODE
733370  0.250794s       UPDATE_TREE_A
0       0.000000s       UPDATE_TREE_B
4       0.000001s       UPDATE_TREE_C
0       0.000000s       UPDATE_TREE_D
123139236       42.110430s      PROCESS_EXPLORE_QUEUE_A
109735829       37.526812s      PROCESS_EXPLORE_QUEUE_B
1070562515      366.104660s     PROCESS_EXPLORE_QUEUE_C
119086763       40.724589s      PROCESS_EXPLORE_QUEUE_D
23659   0.008091s       SHOULD_DIE_EQ
11678   0.003994s       SHOULD_DIE_N

30 workers on threadripper

4804s /30 160s (11.9%)
485s in explore queue /30 = 16s (1.2%)

so as on RIVERCITY, the thing to improve is the EXTEND_NODE lock.


1:52:41, 60 threads
19698348        6.736325s       FIND_NODE_TO_EXTEND
146448587338    50081.624889s   EXTEND_NODE
170657780       58.360542s      UPDATE_TREE_A
4994    0.001708s       UPDATE_TREE_B
21      0.000007s       UPDATE_TREE_C
13      0.000004s       UPDATE_TREE_D
2215907606      757.783025s     PROCESS_EXPLORE_QUEUE_A
940542996       321.641351s     PROCESS_EXPLORE_QUEUE_B
10068988364     3443.333305s    PROCESS_EXPLORE_QUEUE_C
2385513637      815.783896s     PROCESS_EXPLORE_QUEUE_D
248261  0.084899s       SHOULD_DIE_EQ
86364   0.029534s       SHOULD_DIE_N


again w/ 60 on threadripper:

Perf counters:
3946475 1.349592s       0.000818%       L_FIND_NODE_TO_EXTEND
58774109444     20099.223597s   12.175094%      L_EXTEND_NODE
48792651        16.685823s      0.010107%       L_UPDATE_TREE_A
19      0.000006s       0.000000%       L_UPDATE_TREE_B
10      0.000003s       0.000000%       L_UPDATE_TREE_C
10      0.000003s       0.000000%       L_UPDATE_TREE_D
1142331385      390.647755s     0.236635%       L_PROCESS_EXPLORE_QUEUE_A
294973938       100.873449s     0.061104%       L_PROCESS_EXPLORE_QUEUE_B
4132366307      1413.162278s    0.856022%       L_PROCESS_EXPLORE_QUEUE_C
1007022778      344.375715s     0.208605%       L_PROCESS_EXPLORE_QUEUE_D
98487   0.033680s       0.000020%       L_SHOULD_DIE_EQ
39234   0.013417s       0.000008%       L_SHOULD_DIE_N
316738804545    108316.469865s  65.612642%      EXEC

... so we seem to be spending a lot of time somewhere else,
which doesn't happen on rivercity. Still good to reduce the
lock contention here anyway...


Now batch updates:

Perf counters:
23759653131     8125.211172s    17.761734%      L_COMMIT_QUEUE
11777   0.004027s       0.000009%       L_GET_NODES_TO_EXTEND
2604    0.000891s       0.000002%       L_UPDATE_TREE_A
2       0.000001s       0.000000%       L_UPDATE_TREE_B
2       0.000001s       0.000000%       L_UPDATE_TREE_C
0       0.000000s       0.000000%       L_UPDATE_TREE_D
908131  0.310558s       0.000679%       L_PROCESS_EXPLORE_QUEUE_A
603137325       206.257983s     0.450881%       L_PROCESS_EXPLORE_QUEUE_B
2346602475      802.479756s     1.754223%       L_PROCESS_EXPLORE_QUEUE_C
146842919       50.216631s      0.109774%       L_PROCESS_EXPLORE_QUEUE_D
7244    0.002477s       0.000005%       L_SHOULD_DIE_EQ
15677   0.005361s       0.000012%       L_SHOULD_DIE_N
101730605547    34789.340069s   76.049593%      EXEC
1961203 0.670683s       0.001466%       OBSERVE
23760336342     8125.444813s    17.762245%      COMMIT

note that we wait even longer for the commit lock, which is pretty
weird. We spend most of this time waiting for the lock?

With batch size of 100 nodes:
Perf counters:
2302204857      787.296873s     2.549002%       L_COMMIT_QUEUE
115     0.000039s       0.000000%       L_GET_NODES_TO_EXTEND
29412   0.010058s       0.000033%       L_UPDATE_TREE_A
1       0.000000s       0.000000%       L_UPDATE_TREE_B
1       0.000000s       0.000000%       L_UPDATE_TREE_C
0       0.000000s       0.000000%       L_UPDATE_TREE_D
2398153 0.820109s       0.002655%       L_PROCESS_EXPLORE_QUEUE_A
1199396963      410.163968s     1.327973%       L_PROCESS_EXPLORE_QUEUE_B
4260717475      1457.059539s    4.717468%       L_PROCESS_EXPLORE_QUEUE_C
278075729       95.094992s      0.307886%       L_PROCESS_EXPLORE_QUEUE_D
1986    0.000679s       0.000002%       L_SHOULD_DIE_EQ
15380   0.005260s       0.000017%       L_SHOULD_DIE_N
81895531774     28006.237550s   90.674769%      EXEC
1676343 0.573268s       0.001856%       OBSERVE
2302580911      787.425475s     2.549419%       COMMIT

... much better. Also, fixed NES frame counter, and we actually get
about 100k frames after it warms up.
