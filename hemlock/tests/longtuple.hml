
let

    datatype a s = S of a | T of a


in
(*
    case (S (), 1, (3, 4), ()) of
        (S _, _, (_, w), ()) => w
      | (T _, _, (z, _), ()) => z
*)
    case (S (), 2, 3, 5, 6, 7, 8, 9, 10) of
        (S _,   _, w, _, _, _, _, _, _) => w
      | (T _,   _, _, _, _, _, z, _, _) => z

end